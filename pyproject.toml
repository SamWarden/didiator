[tool.poetry]
name = "didiator"
version = "0.2.0"
description = "A library that implements the Mediator pattern and uses DI library"
authors = [
    "SamWarden <SamWardenSad@gmail.com>",
]
maintainers = [
    "SamWarden <SamWardenSad@gmail.com>",
]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/SamWarden/didiator"
repository = "https://github.com/SamWarden/didiator"
keywords = [
    "didiator",
    "mediatr",
    "mediator",
    "CQRS",
    "DI",
    "events",
    "ioc",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/SamWarden/didiator/issues"

[tool.poetry.dependencies]
python = "^3.10,<4"
di = {version = "^0.73.0", extras = ["anyio"], optional = true}

[tool.poetry.extras]
di = ["di"]

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
mypy = "^0.991"
pytest-asyncio = "^0.20.3"
pylint = "^2.15.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint]
disable = [
    "C0114",  # Missing module docstrings
    "C0115",  # Missing class docstrings
    "C0116",  # Missing function docstrings
    "R0903",  # Too few public methods

]
max-line-length = 120
